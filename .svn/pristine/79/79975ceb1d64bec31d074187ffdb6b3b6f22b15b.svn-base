var uuids = [];
//所有的设备信息
var servuuids = [];
var cuuids = [];
//所有的特征uuid
var desuuids = [];
//所有的描述符uuid
var uuid;
//设备uuid
var servuuid;
//服务uuid
var cuuid;
//特征uuid
var desuuid;
//描述符uuid
var uuidNum, servuuidNum, cuuidNumN;
var recs = [];
//所有的距离记录;

//初始设置
function iniset(){
	var systemType = api.systemType;
	var systemVersion = parseFloat(api.systemVersion);
	//fixStatusBar("header");
	if (systemType == "ios" && systemVersion >= 6.0) {
		uuidNum = 0;
		servuuidNum = 0;
		cuuidNumN = 0;
		//initmg();
	} else if (systemType == "android" && systemVersion >= 4.4) {
		uuidNum = 0;
		servuuidNum = 2;
		cuuidNumN = 0;
		//initmg();
	}
}
var bflag;
//初始化蓝牙4.0管理器
function initmg() {
	
	ble.initManager(function(ret) {
		if (ret.state == "poweredOn") {//蓝牙4.0设备连接状态,设备开启状态 -- 可用状态
			//api.alert({msg:"初始化成功"});
			scan();
		}else{
			bflag=false;
		}
	});
	blueChange(bflag);
}

//停止扫描
function stopscan() {
	ble.stopScan();
}

//开始扫描
function scan() {
	ble.scan({
		serviceUUIDs : []
	}, function(ret) {
		if (ret.status) {
			//alert( '开始扫描' );
			getInfo();
		}else{
			bflag=false;
		}
	});
}

function getInfo() {//获取扫描到的设备的信息
	ble.getPeripheral(function(ret) {
		//api.alert( "getInfo:"+{msg:JSON.stringify( ret )} );
		if (ret) {
			uuids = ret.peripherals;
			if(!uuids.length){
				alert("没有可连接的设备");
				bflag=false;
			}else{
				connect();
			}
		}else{
			bflag=false;
		}
	});
}

function connect() {//根据uuid 链接设备
	uuid = uuids[uuidNum].uuid;
	if ( typeof (uuid) == undefined) {
		bflag=false;
		return;
	}
	ble.connect({
		peripheralUUID : uuid
	}, function(ret, err) {
		//api.alert("connect:"+ {msg:JSON.stringify( ret )} );
		if (ret.status) {
			//alert("连接成功！");
			
			disServ();
			
		} else {
			//alert(err.code);
			bflag=false;
		}
	});
}

function disServ() {//根据uuid  找到所有服务，
	ble.discoverService({
		peripheralUUID : uuid
	}, function(ret) {
		if (ret) {
			//api.alert( {msg:JSON.stringify( ret )} );
			servuuids = ret.services;
			disCharac();
		}else{
			bflag=false;
		}
	});
}

function disCharac() {

	servuuid = servuuids[servuuidNum];
	ble.discoverCharacteristics({//找到特征uuid
		peripheralUUID : uuid,
		serviceUUID : servuuid
	}, function(ret) {
		if (ret) {
			//api.alert( {msg:JSON.stringify( ret )} );
			cuuids = ret.characteristics;
			//
			setNo();
		}esle{
			bflag=false;
		}
	});
}

function setNo() {//监听收到的值

	cuuid = cuuids[cuuidNumN].uuid;
	//描述符uuid
	ble.setNotify({
		peripheralUUID : uuid,
		serviceUUID : servuuid,
		characteristicUUID : cuuid
	}, function(ret) {
		if (ret) {
			//api.alert( {msg:JSON.stringify( ret )} );
			changeData(ret.characteristic.value);
			bflag=true;
			//alert("value:"+parseInt(ret.characteristic.value,16));
		}else{
			bflag=false;
		}
	});
}

//将测距的数据转换
function changeData(sdata) {
	if (sdata.substring(5, 6) == "5") {
		var ddata = sdata.substring(11, 12) + sdata.substring(13, 14) + "." + sdata.substring(17, 18) + sdata.substring(19, 20) + sdata.substring(21, 22) + "m";
	} else {
		var ddata = sdata.substring(11, 12) + "." + sdata.substring(15, 16) + sdata.substring(17, 18) + sdata.substring(19, 20) + "m";
	}
	//alert(ddata);

	//recs.push(ddata);
	showRec(ddata);
	
	if(delIndex!=-1){
		line[delIndex].len=ddata;
		reDraw();
	}
	return ddata;
}

//页面上展示距离记录
function showRec(ddata) {
	//alert("showRec:"+ddata);
	//$("#ullistid").append("<li>" + ddata + "</li>");
	//document.getElementById("newRecSid").innerHTML = ddata;
	var d1=$("#blText1").val();
	var d2=$("#blText2").val();
	var d3=$("#blText3").val();
	d1=d2,d2=d3,d3=ddata;
	$("#blText1").val(d1);
	$("#blText2").val(d2);
	$("#blText3").val(d3);
}

function blueChange(bflag){
	if(bflag){
		$("#linkble").removeClass("blue_p");
		$("#linkble").addClass("blue_p_active");
	}else{
		$("#linkble").removeClass("blue_p_active");
		$("#linkble").addClass("blue_p");
	}
}

